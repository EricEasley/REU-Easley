
        time = clock() - time;
        clocks = rdtsc() - clocks;

        printf("%s ordering of %i and %i channels over %i and %i channels took %lf seconds for %i iterations, with %llu cycles\n", type, kh, kcnls, (oh - 1) * stride + kh, icnls, (double)time/CLOCKS_PER_SEC, ITERATIONS, clocks);
//      printf("Clocks: %lli\n", clocks);

        return omap;
}

#if defined(__i386__)

static __inline__ unsigned long long rdtsc(void)
{
    unsigned long long int x;
    __asm__ volatile (".byte 0x0f, 0x31" : "=A" (x));
    return x;
}

#elif defined(__x86_64__)

static __inline__ unsigned long long rdtsc(void)
{
    unsigned hi, lo;
    __asm__ __volatile__ ("rdtsc" : "=a"(lo), "=d"(hi));
    return ( (unsigned long long)lo)|( ((unsigned long long)hi)<<32 );
}

#endif


